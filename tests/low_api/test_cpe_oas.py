"""
    NVD API 2.0 Python API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 0.1.0
    Contact: 15080890+kannkyo@users.noreply.github.com
    Generated by: https://openapi-generator.tech
"""


import unittest
from datetime import datetime

from nvd_api.low_api.models import (CpeOas, CpeOasProductsInner,
                                    CpeOasProductsInnerCpe,
                                    CpeOasProductsInnerCpeDeprecatedByInner,
                                    CpeOasProductsInnerCpeRefsInner,
                                    CpeOasProductsInnerCpeTitlesInner)


class TestCpeOas(unittest.TestCase):
    """CpeOas unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def test_cpe_oas(self):
        # execute ###########################################################
        titles = [CpeOasProductsInnerCpeTitlesInner(
            title="Microsoft Access",
            lang="en")]
        refs = [CpeOasProductsInnerCpeRefsInner(
            ref="http://refs.com",
            type="Advisory")]
        deprecated_by = [CpeOasProductsInnerCpeDeprecatedByInner(
            cpe_name="cpe:2.3:a:microsoft:access:-:*:*:*:*:*:*:*",
            cpe_name_id="87316812-5F2C-4286-94FE-CC98B9EAEF53")]
        deprecates = [CpeOasProductsInnerCpeDeprecatedByInner(
            cpe_name="cpe:2.3:a:microsoft:access:-:*:*:*:*:*:*:*",
            cpe_name_id="87316812-5F2C-4286-94FE-CC98B9EAEF53")]
        inner_cpe = CpeOasProductsInnerCpe(
            deprecated=False,
            cpe_name="cpe:2.3:a:microsoft:access:-:*:*:*:*:*:*:*",
            cpe_name_id="87316812-5F2C-4286-94FE-CC98B9EAEF53",
            last_modified=datetime(2023, 1, 2, 12, 34, 56, 789),
            created=datetime(2023, 1, 2, 12, 34, 56, 789),
            titles=titles,
            refs=refs,
            deprecated_by=deprecated_by,
            deprecates=deprecates
        )
        products = [CpeOasProductsInner(cpe=inner_cpe)]
        cpe = CpeOas(results_per_page=1,
                     start_index=2,
                     total_results=3,
                     format="format",
                     version="version",
                     timestamp=datetime(2023, 1, 2, 12, 34, 56, 789),
                     products=products)

        # verify ###########################################################
        assert cpe.results_per_page == 1
        assert cpe.start_index == 2
        assert cpe.total_results == 3
        assert cpe.format == "format"
        assert cpe.version == "version"
        assert cpe.timestamp == datetime(2023, 1, 2, 12, 34, 56, 789)
        assert cpe.products[0].cpe.deprecated is False
        assert cpe.products[0].cpe.cpe_name == "cpe:2.3:a:microsoft:access:-:*:*:*:*:*:*:*"  # noqa
        assert cpe.products[0].cpe.cpe_name_id == "87316812-5F2C-4286-94FE-CC98B9EAEF53"  # noqa
        assert cpe.products[0].cpe.last_modified == datetime(2023, 1, 2, 12, 34, 56, 789)  # noqa
        assert cpe.products[0].cpe.created == datetime(2023, 1, 2, 12, 34, 56, 789)  # noqa
        assert cpe.products[0].cpe.titles[0].lang == "en"
        assert cpe.products[0].cpe.titles[0].title == "Microsoft Access"
        assert cpe.products[0].cpe.refs[0].ref == "http://refs.com"
        assert cpe.products[0].cpe.refs[0].type == "Advisory"
        assert cpe.products[0].cpe.deprecated_by[0].cpe_name == "cpe:2.3:a:microsoft:access:-:*:*:*:*:*:*:*"  # noqa
        assert cpe.products[0].cpe.deprecated_by[0].cpe_name_id == "87316812-5F2C-4286-94FE-CC98B9EAEF53"  # noqa
        assert cpe.products[0].cpe.deprecates[0].cpe_name == "cpe:2.3:a:microsoft:access:-:*:*:*:*:*:*:*"  # noqa
        assert cpe.products[0].cpe.deprecates[0].cpe_name_id == "87316812-5F2C-4286-94FE-CC98B9EAEF53"  # noqa

    def test_cpe_oas_using_args(self):
        # execute ###########################################################
        titles = [CpeOasProductsInnerCpeTitlesInner(
            "Microsoft Access",
            "en")]
        refs = [CpeOasProductsInnerCpeRefsInner(
            ref="http://refs.com",
            type="Advisory")]
        deprecated_by = [CpeOasProductsInnerCpeDeprecatedByInner(
            cpe_name="cpe:2.3:a:microsoft:access:-:*:*:*:*:*:*:*",
            cpe_name_id="87316812-5F2C-4286-94FE-CC98B9EAEF53")]
        deprecates = [CpeOasProductsInnerCpeDeprecatedByInner(
            cpe_name="cpe:2.3:a:microsoft:access:-:*:*:*:*:*:*:*",
            cpe_name_id="87316812-5F2C-4286-94FE-CC98B9EAEF53")]
        inner_cpe = CpeOasProductsInnerCpe(
            False,
            "cpe:2.3:a:microsoft:access:-:*:*:*:*:*:*:*",
            "87316812-5F2C-4286-94FE-CC98B9EAEF53",
            datetime(2023, 1, 2, 12, 34, 56, 789),
            datetime(2023, 1, 2, 12, 34, 56, 789),
            titles=titles,
            refs=refs,
            deprecated_by=deprecated_by,
            deprecates=deprecates
        )
        products = [CpeOasProductsInner(cpe=inner_cpe)]
        cpe = CpeOas(1,
                     2,
                     3,
                     "format",
                     "version",
                     datetime(2023, 1, 2, 12, 34, 56, 789),
                     products)

        # verify ###########################################################
        assert cpe.results_per_page == 1
        assert cpe.start_index == 2
        assert cpe.total_results == 3
        assert cpe.format == "format"
        assert cpe.version == "version"
        assert cpe.timestamp == datetime(2023, 1, 2, 12, 34, 56, 789)
        assert cpe.products[0].cpe.deprecated is False
        assert cpe.products[0].cpe.cpe_name == "cpe:2.3:a:microsoft:access:-:*:*:*:*:*:*:*"  # noqa
        assert cpe.products[0].cpe.cpe_name_id == "87316812-5F2C-4286-94FE-CC98B9EAEF53"  # noqa
        assert cpe.products[0].cpe.last_modified == datetime(2023, 1, 2, 12, 34, 56, 789)  # noqa
        assert cpe.products[0].cpe.created == datetime(2023, 1, 2, 12, 34, 56, 789)  # noqa
        assert cpe.products[0].cpe.titles[0].lang == "en"
        assert cpe.products[0].cpe.titles[0].title == "Microsoft Access"
        assert cpe.products[0].cpe.refs[0].ref == "http://refs.com"
        assert cpe.products[0].cpe.refs[0].type == "Advisory"
        assert cpe.products[0].cpe.deprecated_by[0].cpe_name == "cpe:2.3:a:microsoft:access:-:*:*:*:*:*:*:*"  # noqa
        assert cpe.products[0].cpe.deprecated_by[0].cpe_name_id == "87316812-5F2C-4286-94FE-CC98B9EAEF53"  # noqa
        assert cpe.products[0].cpe.deprecates[0].cpe_name == "cpe:2.3:a:microsoft:access:-:*:*:*:*:*:*:*"  # noqa
        assert cpe.products[0].cpe.deprecates[0].cpe_name_id == "87316812-5F2C-4286-94FE-CC98B9EAEF53"  # noqa


if __name__ == '__main__':
    unittest.main()
