"""
    NVD API 2.0 Python API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 0.1.0
    Contact: 15080890+kannkyo@users.noreply.github.com
    Generated by: https://openapi-generator.tech
"""


import unittest
from datetime import datetime

from nvd_api.low_api.models import (
    CveHistoryOas, CveHistoryOasCveChangesInner,
    CveHistoryOasCveChangesInnerChange,
    CveHistoryOasCveChangesInnerChangeDetailsInner)


class TestCveHistoryOas(unittest.TestCase):
    """CveHistoryOas unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def test_cve_history_oas(self):
        # execute ###########################################################
        details = [CveHistoryOasCveChangesInnerChangeDetailsInner(
            type="CVSS V2",
            action="Changed",
            old_value="(AV:N/AC:L/Au:N/C:P/I:N/A:N)",
            new_value="(AV:N/AC:L/Au:N/C:N/I:N/A:P)"
        )]
        change = CveHistoryOasCveChangesInnerChange(
            cve_id="CVE-2019-1010218",
            event_name="Initial Analysis",
            cve_change_id="E52AFC66-FAFE-4393-B7FF-4EC2FA6CB6C4",
            source_identifier="nvd@nist.gov",
            created=datetime(2023, 1, 2, 12, 34, 56, 789),
            details=details
        )
        cve_changes = [CveHistoryOasCveChangesInner(change=change)]
        cve_history = CveHistoryOas(
            results_per_page=1,
            start_index=2,
            total_results=3,
            format="format",
            version="version",
            timestamp=datetime(2023, 1, 2, 12, 34, 56, 789),
            cve_changes=cve_changes)

        # verify ###########################################################
        assert cve_history.results_per_page == 1
        assert cve_history.start_index == 2
        assert cve_history.total_results == 3
        assert cve_history.format == "format"
        assert cve_history.version == "version"
        assert cve_history.timestamp == datetime(2023, 1, 2, 12, 34, 56, 789)
        assert cve_history.cve_changes[0].change.cve_id == "CVE-2019-1010218"  # noqa
        assert cve_history.cve_changes[0].change.event_name == "Initial Analysis"  # noqa
        assert cve_history.cve_changes[0].change.cve_change_id == "E52AFC66-FAFE-4393-B7FF-4EC2FA6CB6C4"  # noqa
        assert cve_history.cve_changes[0].change.source_identifier == "nvd@nist.gov"  # noqa
        assert cve_history.cve_changes[0].change.created == datetime(2023, 1, 2, 12, 34, 56, 789)  # noqa
        assert cve_history.cve_changes[0].change.details[0].type == "CVSS V2"  # noqa
        assert cve_history.cve_changes[0].change.details[0].action == "Changed"  # noqa
        assert cve_history.cve_changes[0].change.details[0].old_value == "(AV:N/AC:L/Au:N/C:P/I:N/A:N)"  # noqa
        assert cve_history.cve_changes[0].change.details[0].new_value == "(AV:N/AC:L/Au:N/C:N/I:N/A:P)"  # noqa

    def test_cve_history_oas_using_args(self):
        # execute ###########################################################
        details = [CveHistoryOasCveChangesInnerChangeDetailsInner(
            "CVSS V2",
            action="Changed",
            old_value="(AV:N/AC:L/Au:N/C:P/I:N/A:N)",
            new_value="(AV:N/AC:L/Au:N/C:N/I:N/A:P)"
        )]
        change = CveHistoryOasCveChangesInnerChange(
            "CVE-2019-1010218",
            "Initial Analysis",
            "E52AFC66-FAFE-4393-B7FF-4EC2FA6CB6C4",
            "nvd@nist.gov",
            created=datetime(2023, 1, 2, 12, 34, 56, 789),
            details=details
        )
        cve_changes = [CveHistoryOasCveChangesInner(change=change)]
        cve_history = CveHistoryOas(
            1,
            2,
            3,
            "format",
            "version",
            datetime(2023, 1, 2, 12, 34, 56, 789),
            cve_changes=cve_changes)

        # verify ###########################################################
        assert cve_history.results_per_page == 1
        assert cve_history.start_index == 2
        assert cve_history.total_results == 3
        assert cve_history.format == "format"
        assert cve_history.version == "version"
        assert cve_history.timestamp == datetime(2023, 1, 2, 12, 34, 56, 789)
        assert cve_history.cve_changes[0].change.cve_id == "CVE-2019-1010218"  # noqa
        assert cve_history.cve_changes[0].change.event_name == "Initial Analysis"  # noqa
        assert cve_history.cve_changes[0].change.cve_change_id == "E52AFC66-FAFE-4393-B7FF-4EC2FA6CB6C4"  # noqa
        assert cve_history.cve_changes[0].change.source_identifier == "nvd@nist.gov"  # noqa
        assert cve_history.cve_changes[0].change.created == datetime(2023, 1, 2, 12, 34, 56, 789)  # noqa
        assert cve_history.cve_changes[0].change.details[0].type == "CVSS V2"  # noqa
        assert cve_history.cve_changes[0].change.details[0].action == "Changed"  # noqa
        assert cve_history.cve_changes[0].change.details[0].old_value == "(AV:N/AC:L/Au:N/C:P/I:N/A:N)"  # noqa
        assert cve_history.cve_changes[0].change.details[0].new_value == "(AV:N/AC:L/Au:N/C:N/I:N/A:P)"  # noqa


if __name__ == '__main__':
    unittest.main()
